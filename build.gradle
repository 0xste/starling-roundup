plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'com.github.sherter.google-java-format' version '0.9'
}
ext {
    karateVersion = '0.9.5'
}
group = 'com.stefanomantini'
sourceCompatibility = '14'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompile "com.intuit.karate:karate-junit5:${karateVersion}"
    testCompile "com.intuit.karate:karate-apache:${karateVersion}"
    testCompile "net.masterthought:cucumber-reporting:3.8.0"
    testCompile "org.mockito:mockito-core:2.21.0"
    testCompile "org.mockito:mockito-junit-jupiter:2.23.0"
    testImplementation 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}
sourceSets {
    test {
        java {
            srcDir file('src/test/java')
        }
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}
test {
    useJUnitPlatform()
    systemProperty "karate.options", System.properties.getProperty("karate.options")
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    outputs.upToDateWhen { false }
}


task karate() {
    println 'karate'
}